<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.rainstorm.boot.dao.boot.UserDao">
    <resultMap id="BaseResultMap" type="me.rainstorm.boot.domain.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_on" jdbcType="TIMESTAMP" property="createdOn"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, birthday, gender, created_by, created_on, updated_by, updated_on,
        remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="me.rainstorm.boot.domain.entity.User">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (id, username, password,
        birthday, gender, created_by,
        created_on, updated_by, updated_on,
        remark)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{birthday,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR},
        #{createdOn,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP},
        #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="me.rainstorm.boot.domain.entity.User">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdOn != null">
                created_on,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedOn != null">
                updated_on,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT},
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdOn != null">
                #{createdOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedOn != null">
                #{updatedOn,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.rainstorm.boot.domain.entity.User">
        update user
        <set>
            <if test="username != null">
                username =
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password =
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday =
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null">
                gender =
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                created_by =
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdOn != null">
                created_on =
                #{createdOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by =
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedOn != null">
                updated_on =
                #{updatedOn,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark =
                #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.rainstorm.boot.domain.entity.User">
        update user
        set username   = #{username,jdbcType=VARCHAR},
            password   = #{password,jdbcType=VARCHAR},
            birthday   = #{birthday,jdbcType=TIMESTAMP},
            gender     = #{gender,jdbcType=INTEGER},
            created_by = #{createdBy,jdbcType=VARCHAR},
            created_on = #{createdOn,jdbcType=TIMESTAMP},
            updated_by = #{updatedBy,jdbcType=VARCHAR},
            updated_on = #{updatedOn,jdbcType=TIMESTAMP},
            remark     = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="find" parameterType="me.rainstorm.boot.domain.entity.User" resultType="java.lang.Integer">
        select count(1) from user
        <where>
            username = #{username}
            <if test="password != null">
                and password =
                #{password}
            </if>
        </where>
    </select>

    <select id="selectOne" parameterType="me.rainstorm.boot.domain.entity.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            1=1
            <if test="username != null">
                and username =
                #{username}
            </if>
            <if test="id != null">
                and id =
                #{id}
            </if>
        </where>
        limit 1;
    </select>
</mapper>